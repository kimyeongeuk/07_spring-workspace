<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">


	<resultMap type="boardDto" id="boardResultMap">
		<result column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="user_id" property="boardWriter"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="COUNT" property="count"/>
		<result column="REGIST_DATE" property="registDate"/>
		<result column="status" property="status" />
		<result column="attach_count" property="attachCount" />

		<!-- has many 관계(한 객체에 여러객체(List)를 가지고있는)일 경우 (collection 사용하기) -->
		<!-- case1) List내의 객체를 매핑시켜주는 resultMap이 따로 존해하지 않을 경우 -->
		
		<!-- 
		<collection ofType="AttachDto" property="attachList">
			<result column="file_no" property="fileNo"/>
			<result column="file_path" property="filePath"/>
			<result column="filesystem_name" property="filesystemName"/>
			<result column="original_Name" property="originalName"/>
		</collection>
		 -->
		 
		 <!-- case 2) List내의 객체를 매핑시켜주는 resultMap이 따로 존재할 경우 -->
		<collection resultMap="attachResultMap" property="attachList"/>
	</resultMap>
		
	<resultMap type="AttachDto" id="attachResultMap">
			<result column="file_no" property="fileNo"/>
			<result column="file_path" property="filePath"/>
			<result column="filesystem_name" property="filesystemName"/>
			<result column="original_Name" property="originalName"/>
	</resultMap>
	
	<resultMap type="ReplyDto" id="replyResultMap">
		<result column="REPLY_NO" property="replyNo" />
		<result column="REPLY_CONTENT" property="replyContent" />
		<result column="regist_date" property="registDate" />
		<result column="user_id" property="replyWriter" />
	</resultMap>
	
	

	<!-- 혹시라도 has a 관계(1:1)일 경우 => collection 대신에 association 으로 사용 -->

	<select id="selectBoardListCount" resultType="_int">
		select
						count(*)
			from	board
		 where	status = 'Y'
	
	</select>

	<select id="selectBoardList" resultMap="boardResultMap">
		select
		        board_no
		     ,  board_title
		     ,  user_id
		     ,  count
		     ,  to_char(regist_date,'YYYY-MM-DD') as regist_date
		     ,  (
		            select count(*)
		              from attachment
		             where ref_type = 'B'
		               and ref_no = b.board_no
		        ) as attach_count
		  from  board b
		  join  member on (user_no = board_writer)
		 where  b.status = 'Y'
		 order by board_no desc
	</select>
	
	
	<select id="selectSearchListCount" resultType="_int">
		select
						count(*)
			from	board b
			join	member on (user_no = board_writer)
		 where	b.status = 'Y'	
		 	 and	${condition} like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchList" resultMap="boardResultMap">
		select
		        board_no
		     ,  board_title
		     ,  user_id
		     ,  count
		     ,  to_char(regist_date,'YYYY-MM-DD') as regist_date
		     ,  (
		            select count(*)
		              from attachment
		             where ref_type = 'B'
		               and ref_no = b.board_no
		        ) as attach_count
		  from  board b
		  join  member on (user_no = board_writer)
		 where  b.status = 'Y'
		 	 and	${condition} like '%' || #{keyword} || '%'
		 order by board_no desc	
	</select>

	<insert id="insertBoard">
		insert
			into	board
			(
				BOARD_NO
			,	BOARD_TITLE
			,	BOARD_WRITER
			, BOARD_CONTENT
			)
			values
			(
				seq_bno.nextval
			,	#{boardTitle}
			,	#{boardWriter}
			, #{boardContent}
			)
	
	</insert>


	<insert id="insertAttach">
		insert
			into attachment
			(
				FILE_NO
			,	FILE_PATH
			,	FILESYSTEM_NAME
			,	ORIGINAL_NAME
			,	REF_TYPE
			,	REF_NO
			)
			values
			(
				seq_ano.nextval
			,	#{filePath}
			,	#{filesystemName}
			, #{originalName}
			, #{refType}
			<choose>
				<when test="refNo == 0">
					, seq_bno.currval
				</when>
				<otherwise>
					, #{refNo}
				</otherwise>
			</choose>
			)
	
	
	</insert>


	<select id="selectBoard" resultMap="boardResultMap">
		select
		        board_no
		     ,  board_title
		     ,  board_content
		     ,  user_id
		     ,  to_char(regist_date,'YYYY-MM-DD') as regist_date
		     ,  file_no
		     ,  file_path
		     ,  filesystem_name
		     ,  original_name
		  from  board b
		  join  member on (user_no = board_writer)
		  full join  attachment on (ref_type = 'B' and ref_no = board_no)
		 where  b.status = 'Y'
		   and  board_no = #{boardNo}
	</select>


	<update id="updateIncreaseCount">
		update
						board
			 set	count = count + 1
		 where	board_no = #{boardNo}
		 	 and	status= 'Y'
	
	</update>

	<select id="selectReplyList" resultMap="replyResultMap">
		select
						reply_no
				 ,	user_id
				 ,	reply_content
				 ,	to_char(regist_date, 'YYYY-MM-dd') regist_date
			from	reply r
			join	member on (user_no = reply_writer)
		 where	ref_bno = #{boardNo}
		   and	r.status = 'Y'
		 order by reply_no desc
		
		
	</select>

	<insert id="insertReply">
		insert
			into	reply
			(
				reply_no
			,	reply_content
			,	ref_bno
			,	reply_writer
			)
			values
			(
				seq_rno.nextval
			,	#{replyContent}
			,	#{refBno}
			,	#{replyWriter}
			)
	</insert>
	
	<update id="deleteBoard">
		update
						board
			 set	status = 'N'
		 where	board_no = #{boardNo}
	</update>
	
	<select id="selectDelAttach" resultMap="attachResultMap">
		select
						file_path
				 ,	filesystem_name
			from	attachment
			<where>
				<foreach collection="array" open="file_no in(" close=")" item="item" separator=",">
					#{item}
				</foreach>
			</where>
			
	</select>
	
	<update id="updateBoard">
		update
						board
			 set	board_title = #{boardTitle}
			 	 ,	board_content = #{boardContent}
		 where	board_no = #{boardNo}
	
	</update>
	
	<delete id="deleteAttach">
		delete
			from	attachment
		<where>
			<foreach collection="array" open="file_no in(" close=")" item="item" separator=",">
				#{item}
			</foreach>
		</where>
	</delete>
	
	
	


</mapper>
